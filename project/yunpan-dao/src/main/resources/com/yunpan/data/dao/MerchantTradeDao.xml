<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunpan.data.dao.MerchantTradeDao">
  <resultMap id="BaseResultMap" type="com.yunpan.data.entity.MerchantTradeEntity">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="merchant_id" jdbcType="BIGINT" property="merchantId" />
    <result column="pay_amount" jdbcType="INTEGER" property="payAmount" />
    <result column="need_pay_amount" jdbcType="INTEGER" property="needPayAmount" />
    <result column="confirm_pay_amount" jdbcType="INTEGER" property="confirmPayAmount" />
    <result column="trans_type" jdbcType="VARCHAR" property="transType" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="confirm_pay_time" jdbcType="TIMESTAMP" property="confirmPayTime" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, merchant_id, pay_amount, need_pay_amount, confirm_pay_amount, trans_type, pay_status, 
    confirm_pay_time, created_time, updated_time, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from t_merchant_trade
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.yunpan.data.entity.MerchantTradeEntity">
    <!--
    @mbggenerated
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_merchant_trade (merchant_id, pay_amount, need_pay_amount, 
      confirm_pay_amount, trans_type, pay_status, 
      confirm_pay_time, created_time, updated_time, 
      status)
    values (#{merchantId,jdbcType=BIGINT}, #{payAmount,jdbcType=INTEGER}, #{needPayAmount,jdbcType=INTEGER}, 
      #{confirmPayAmount,jdbcType=INTEGER}, #{transType,jdbcType=VARCHAR}, #{payStatus,jdbcType=INTEGER}, 
      #{confirmPayTime,jdbcType=TIMESTAMP}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yunpan.data.entity.MerchantTradeEntity">
    <!--
    @mbggenerated
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_merchant_trade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="needPayAmount != null">
        need_pay_amount,
      </if>
      <if test="confirmPayAmount != null">
        confirm_pay_amount,
      </if>
      <if test="transType != null">
        trans_type,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="confirmPayTime != null">
        confirm_pay_time,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="merchantId != null">
        #{merchantId,jdbcType=BIGINT},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="needPayAmount != null">
        #{needPayAmount,jdbcType=INTEGER},
      </if>
      <if test="confirmPayAmount != null">
        #{confirmPayAmount,jdbcType=INTEGER},
      </if>
      <if test="transType != null">
        #{transType,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="confirmPayTime != null">
        #{confirmPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunpan.data.entity.MerchantTradeEntity">
    <!--
    @mbggenerated
    -->
    update t_merchant_trade
    <set>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=BIGINT},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="needPayAmount != null">
        need_pay_amount = #{needPayAmount,jdbcType=INTEGER},
      </if>
      <if test="confirmPayAmount != null">
        confirm_pay_amount = #{confirmPayAmount,jdbcType=INTEGER},
      </if>
      <if test="transType != null">
        trans_type = #{transType,jdbcType=VARCHAR},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="confirmPayTime != null">
        confirm_pay_time = #{confirmPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunpan.data.entity.MerchantTradeEntity">
    <!--
    @mbggenerated
    -->
    update t_merchant_trade
    set merchant_id = #{merchantId,jdbcType=BIGINT},
      pay_amount = #{payAmount,jdbcType=INTEGER},
      need_pay_amount = #{needPayAmount,jdbcType=INTEGER},
      confirm_pay_amount = #{confirmPayAmount,jdbcType=INTEGER},
      trans_type = #{transType,jdbcType=VARCHAR},
      pay_status = #{payStatus,jdbcType=INTEGER},
      confirm_pay_time = #{confirmPayTime,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>